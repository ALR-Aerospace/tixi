# $Id: Sconstruct 2247 2009-06-30 13:22:50Z litz_ma $
# scons script to build the unit test suite
import os

Import( [ 'env', 'libxml2Home', 'fortranNames'  ] )

def testIt( target, source, env=env ):

	if "%s"% Platform() == 'win32':
		os.chdir('CUnitTests')
		os.system( 'runtests.exe > testResult' )
		os.system( 'type testResult')
		os.chdir('..')
	else:
		os.system( 'cd CUnitTests; ./runtests>testResult' )
		os.system( 'cat CUnitTests/testResult')
	


cunitEnv = env.Copy()
dict = cunitEnv.Dictionary()

libraries = dict["LIBS"]
if "%s"% Platform() != 'win32':
	libraries.extend( 'm' )

libraryPath = dict["LIBPATH"]
libraryPath.insert( 0, './TestFunctions')

if dict["FORTRAN"]:
	
	cunitEnv.Append( CPPFLAGS = '-DFORTRAN ' )
	cunitEnv.Append( CPPFLAGS = fortranNames )
	cunitEnv.Append( FORTRANPATH = '../../Src' )

	libraries.insert( 0, 'TIXIf')
	if dict['FORTRAN'] == 'ifort':
		dict['LINK'] = 'link'
		libraryPath.insert( 0, r'C:\Programme\Intel\Fortran\Compiler80\ia32\lib')
	elif dict['FORTRAN'] == 'df':
		dict['LINK'] = 'link'
		dict['FORTRANCOM'] = 'df $_FORTRANINCFLAGS /iface:nomixed_str_len_arg /iface:cref /c /object:$TARGET $SOURCE'
	else:
		dict['LINK'] = dict['FORTRAN']

libraries.insert( 0, 'cunit')
libraries.insert( 0, 'testfunctions')

Export('env', 'libxml2Home', 'fortranNames' )	
SConscript( dirs = ['TestFunctions'], 
            name = 'Sconstruct', 
            exports= [ 'cunitEnv' ] )

cunitEnv.Program( target = 'runtests', source = Split( 'CUMain.c addTest.c' ) )

testAction = Action(testIt)

testBuilder = Builder(action=testIt)

env.Append( BUILDERS = {'UnitTest':testBuilder} )

env.UnitTest( 'testResult', 'runtests' + env.Dictionary()['PROGSUFFIX'] )
